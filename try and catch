#include <bits/stdc++.h>

using namespace std;
 void test() throw (int ,char, runtime_error,double)
 {

     int a=1,b=0,c;
     if(b==0)
        throw 20.20;
 }
int main()
{
    /// simple try and catch

    int a=10,b=0,c;
    try{
      if(b==0)
        throw "divided by zero";
      c=a/b;


    }
    catch(const char *err)
    {
        cout<<"exception occurred "<<err<<endl;
    }


    ///multiple  catch blocks


    try {

      throw 20.20;
     }


      catch (int err)
      {

          cout<<"integer error "<<err<<endl;
      }

    catch(...)
    {
        cout<<"error caught"<<endl;
    }

    /// function exception
     try {

       test();
      }
      catch(int i)
      {
          cout<<"error occurred "<<i<<endl;
      }
       catch(char *c)
      {
          cout<<"error occurred "<<c<<endl;
      }
       catch(runtime_error  e)
      {
          cout<<"error occurred "<<e.what()<<endl;
      }
      catch(...)
      {

          cout<<"errored"<<endl;
      }
      
      

      /// nested try and catch and rethrowing
      
      

      try{

         try {
          throw "char type exception in inner block";

         }
         catch(const char *err)
         {
             cout<<"inner block :"<<err<<endl;
             throw runtime_error("what");
         }

      }
      catch(const char *err)
      {
          cout<<"char type error in outer block:"<<err<<endl;

      }
      catch(...)
      {
          cout<<"any type fucking is occurred in this section"<<endl;
      }
    return 0;
}
